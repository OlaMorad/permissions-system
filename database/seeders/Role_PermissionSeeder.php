<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

class Role_PermissionSeeder extends Seeder
{
    public function run(): void
    {
        // جلب كل الصلاحيات دفعة واحدة
        $allPermissions = Permission::all()->pluck('name')->toArray();

        // المدير => كل الصلاحيات
        $admin = Role::where('name', 'المدير')->first();
        if ($admin) {
            $admin->syncPermissions($allPermissions);
        }

        // نائب المدير => صلاحيات نائب المدير فقط
        $deputy = Role::where('name', 'نائب المدير')->first();
        if ($deputy) {
            $deputy->syncPermissions([
                'مراجعة الطلبات المعلقة',
                'تعديل حسابات رؤساء الأقسام',
                'انشاء حسابات رؤساء الاقسام',
                'عرض أرشيف النظام',
                'إدارة الشكاوى',
                'انشاء بريد داخلي',
            ]);
        }

        // رئيس الديوان
        $headFrontDesk = Role::where('name', 'رئيس الديوان')->first();
        if ($headFrontDesk) {
            $headFrontDesk->syncPermissions([
                'انشاء حساب موظف الديوان',
                'تعديل حساب موظف الديوان',
                'عرض كل الموظفين في الدائرة',
                'ادخال معاملة جديدة بشكل يدوي',
                'ادخال معاملة جديدة بصيغة وورد',
                'الغاء تفعيل حساب الموظف',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الداخلي الوارد',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض كافةاستمارات المعاملات',
                'الغاء تفعيل استمارة المعاملة',
                'عرض المعاملة',
                'عرض البريد الداخلي',
                'الموافقة على البريد الداخلي',
                'رفض البريد الداخلي',
                'عرض عدد المعاملات المنجزة من قبل كل موظف',
                'عرض تفاصيل احصائية بالبريد الخارجي',
                'عرض تفاصيل احصائية بالبريد الداخلي',
                'عرض المعاملات المنجزة لهذا الاسبوع',
                'بحث عن معاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // موظف الديوان
        $frontDesk = Role::where('name', 'موظف الديوان')->first();
        if ($frontDesk) {
            $frontDesk->syncPermissions([
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'ارسال المعاملة للدائرة التالية',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // رئيس المالية
        $headFinance = Role::where('name', 'رئيس المالية')->first();
        if ($headFinance) {
            $headFinance->syncPermissions([
                'انشاء حساب موظف المجالس العلمية',
                'تعديل حساب موظف المجالس العلمية',
                'عرض كل الموظفين في الدائرة',
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'عرض عدد المعاملات المنجزة من قبل كل موظف',
                'عرض تفاصيل احصائية بالبريد الخارجي',
                'عرض تفاصيل احصائية بالبريد الداخلي',
                'عرض المعاملات المنجزة لهذا الاسبوع',
                'الموافقة على البريد الداخلي',
                'رفض البريد الداخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'عرض ايصال الدفع',
                'الاشعارات',
            ]);
        }

        // موظف المالية
        $finance = Role::where('name', 'موظف المالية')->first();
        if ($finance) {
            $finance->syncPermissions([
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'ارسال المعاملة للدائرة التالية',
                'انشاء بريد داخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'عرض ايصال الدفع',
                'الاشعارات',
            ]);
        }

        // رئيس المجالس العلمية
        $headAcademic = Role::where('name', 'رئيس مجالس علمية')->first();
        if ($headAcademic) {
            $headAcademic->syncPermissions([
                'انشاء حساب موظف المجالس العلمية',
                'تعديل حساب موظف المجالس العلمية',
                'عرض كل الموظفين في الدائرة',
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'عرض عدد المعاملات المنجزة من قبل كل موظف',
                'عرض تفاصيل احصائية بالبريد الخارجي',
                'عرض تفاصيل احصائية بالبريد الداخلي',
                'عرض المعاملات المنجزة لهذا الاسبوع',
                'الموافقة على البريد الداخلي',
                'رفض البريد الداخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // موظف المجالس العلمية
        $academic = Role::where('name', 'موظف مجالس علمية')->first();
        if ($academic) {
            $academic->syncPermissions([
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'ارسال المعاملة للدائرة التالية',
                'انشاء بريد داخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // رئيس الشهادات
        $headCert = Role::where('name', 'رئيس الشهادات')->first();
        if ($headCert) {
            $headCert->syncPermissions([
                'انشاء حساب موظف الشهادات',
                'تعديل حساب موظف الشهادات',
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'عرض عدد المعاملات المنجزة من قبل كل موظف',
                'عرض تفاصيل احصائية بالبريد الخارجي',
                'عرض تفاصيل احصائية بالبريد الداخلي',
                'عرض المعاملات المنجزة لهذا الاسبوع',
                'الموافقة على البريد الداخلي',
                'رفض البريد الداخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // موظف الشهادات
        $cert = Role::where('name', 'موظف الشهادات')->first();
        if ($cert) {
            $cert->syncPermissions([
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'ارسال المعاملة للدائرة التالية',
                'انشاء بريد داخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // رئيس الامتحانات
        $headExam = Role::where('name', 'رئيس الامتحانات')->first();
        if ($headExam) {
            $headExam->syncPermissions([
                'إدارة ملفات المتقدمين',
                'تسجيل نتائج الامتحانات',
                'توزيع الطلاب على القاعات',
                'إدارة بنك الأسئلة',
                'إضافة سؤال امتحاني',
                'تعديل سؤال امتحاني',
                'حذف سؤال امتحاني',
                'تشفير الأسئلة الامتحانية',
                'إنشاء جدول الامتحانات',
                'توليد إحصائيات الامتحانات',
                'إشعار بجدول الامتحانات',
                'إدارة الأسئلة المستخدمة',
                'تسجيل الدخول بالتعرف على الوجه',
                'إشعارات بدء الامتحان',
                'إدارة صلاحيات موظفي الامتحانات',
                'أرشفة بيانات الامتحانات تلقائيًا',
            ]);
        }

        // موظف الامتحانات
        $exam = Role::where('name', 'موظف الامتحانات')->first();
        if ($exam) {
            $exam->syncPermissions([
                'تسجيل نتائج الامتحانات',
                'توزيع الطلاب على القاعات',
                'تسجيل الدخول بالتعرف على الوجه',
            ]);
        }

        // رئيس الإقامة
        $headResidency = Role::where('name', 'رئيس الإقامة')->first();
        if ($headResidency) {
            $headResidency->syncPermissions([
                'انشاء حساب موظف الإقامة',
                'تعديل حساب موظف الإقامة',
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'عرض عدد المعاملات المنجزة من قبل كل موظف',
                'عرض تفاصيل احصائية بالبريد الخارجي',
                'عرض تفاصيل احصائية بالبريد الداخلي',
                'عرض المعاملات المنجزة لهذا الاسبوع',
                'الموافقة على البريد الداخلي',
                'رفض البريد الداخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // موظف الإقامة
        $residency = Role::where('name', 'موظف الإقامة')->first();
        if ($residency) {
            $residency->syncPermissions([
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'ارسال المعاملة للدائرة التالية',
                'انشاء بريد داخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // رئيس المفاضلة
        $headSelection = Role::where('name', 'رئيس المفاضلة')->first();
        if ($headSelection) {
            $headSelection->syncPermissions([
                'انشاء حساب موظف المفاضلة',
                'تعديل حساب موظف المفاضلة',
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'عرض البريد الداخلي',
                'عرض عدد المعاملات المنجزة من قبل كل موظف',
                'عرض تفاصيل احصائية بالبريد الخارجي',
                'عرض تفاصيل احصائية بالبريد الداخلي',
                'عرض المعاملات المنجزة لهذا الاسبوع',
                'الموافقة على البريد الداخلي',
                'رفض البريد الداخلي',
                'بحث عن معاملة',
                'عرض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // موظف المفاضلة
        $selection = Role::where('name', 'موظف المفاضلة')->first();
        if ($selection) {
            $selection->syncPermissions([
                'عرض البريد الداخلي الوارد',
                'عرض البريد الداخلي الصادر',
                'عرض البريد الخارجي الصادر',
                'عرض البريد الخارجي الوارد',
                'انشاء بريد داخلي',
                'عرض البريد الداخلي',
                'ارسال المعاملة للدائرة التالية',
                'بحث عن معاملة',
                'عرض المعاملة',
                'رفض المعاملة',
                'عرض الارشيف',
                'الاشعارات',
            ]);
        }

        // الطبيب
        $doctor = Role::where('name', 'الطبيب')->first();
        if ($doctor) {
            $doctor->syncPermissions([
                'التسجيل في المنصة',
                'رفع المستندات الشخصية',
                'التقدم للحصول على خدمات',
                'متابعة حالة الطلب',
                'عرض نتائج الامتحانات',
                'تحميل الشهادات',
                'تعديل المعلومات الشخصية',
                'تقديم استفسار أو شكوى',
                'أداء الامتحانات الإلكترونية',
                'تصحيح الامتحانات تلقائيًا',
                'تسجيل الدخول بالتعرف على الوجه',
            ]);
        }
    }
}
